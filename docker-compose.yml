version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: library_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-library}
      MYSQL_USER: ${MYSQL_USER:-library}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-change_me_in_production}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-secure_root_password}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # NestJS API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: library_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE:-library}
      MYSQL_USER: ${MYSQL_USER:-library}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-change_me_in_production}
      APP_PORT: 3000
      CLIENT_URL: ${CLIENT_URL:-http://localhost:8080}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-your_super_secret_jwt_access_key_change_in_production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your_super_secret_jwt_refresh_key_change_in_production}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - api_logs:/app/logs

  # React Frontend with Nginx
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: library_web
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000/api}
    ports:
      - "8080:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # phpMyAdmin (optional - for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: library_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-library}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-change_me_in_production}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password}
    ports:
      - "8081:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - library_network
    profiles:
      - tools

  # Redis (optional - for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: library_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - cache

networks:
  library_network:
    driver: bridge

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local